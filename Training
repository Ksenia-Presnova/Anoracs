import os
import sys

import pygame


def draw(screen):
    screen.fill((0, 0, 0))
    font = pygame.font.Font(None, 200)
    text = font.render("Обучение\nW, A, D - Кнопки управления прыжок, влево, вправо\nКак только закончите осваиваться ...", True, "#ffd700")
    text_x = 0
    text_y = 0
    text_w = 200
    text_h = 200
    screen.blit(text, (text_x, text_y))


def load_image(name, colorkey=None):
    fullname = os.path.join('', name)
    # если файл не существует, то выходим
    if not os.path.isfile(fullname):
        print(f"Файл с изображением '{fullname}' не найден")
        sys.exit()
    image = pygame.image.load(fullname)
    return image


class Main_Hero(pygame.sprite.Sprite):
    pygame.init()
    screen = pygame.display.set_mode((100, 100))
    image = pygame.image.load("Hero_p1.png").convert_alpha()
    image1 = pygame.transform.scale(image, (202, 202))

    def __init__(self, *group):
        super().__init__(*group)
        self.image_p2 = pygame.transform.scale(pygame.image.load("Hero_p2.png"), (202, 202))
        self.image_p1 = pygame.transform.scale(pygame.image.load("Hero_p1.png"), (202, 202))
        self.image_p2_2 = pygame.transform.scale(pygame.image.load("Hero_p2_2.png"), (202, 202))
        self.image_p1_2 = pygame.transform.scale(pygame.image.load("Hero_p1_2.png"), (202, 202))
        self.image = Main_Hero.image1
        self.rect = self.image.get_rect()
        self.rect.x = 0
        self.rect.y = 502
        self.y = 502
        self.size = [202, 202]
        self.step = 15

    def update(self, *args, **kwargs):
        if args and args[1][1] and self.rect.x + self.step < width - 100:
            self.rect = self.rect.move(self.step, 0)
            if (self.image == self.image_p2):
                self.image = self.image_p1
            else:
                self.image = self.image_p2
            if args and self.rect.y != self.y:
                self.rect = self.rect.move(0, self.step)
        elif args and args[1][0] and self.rect.x - self.step + 90 > 0:
            self.rect = self.rect.move(-self.step, 0)
            if self.image == self.image_p2_2:
                self.image = self.image_p1_2
            else:
                self.image = self.image_p2_2
            if args and self.rect.y != self.y:
                self.rect = self.rect.move(0, self.step)
        elif args and self.rect.y != self.y:
            self.rect = self.rect.move(0, self.step)

        elif args and args[1][2]:
            self.rect = self.rect.move(0, -self.step*4)





if __name__ == '__main__':
    pygame.init()

    size = width, height = 1060, 800
    screen = pygame.display.set_mode(size)

    # Спрайт отвечающий за задний фон(небо)
    all_sprites = pygame.sprite.Group()
    sky = pygame.sprite.Sprite()
    sky.image = load_image("sky.png")
    sky.rect = sky.image.get_rect()
    sky.rect.x = 0
    sky.rect.y = 0
    all_sprites.add(sky)

    # Трава\Земля

    for i in range(4):
        grass = pygame.sprite.Sprite()
        grass.image = load_image("grass.png")
        grass.rect = grass.image.get_rect()
        grass.rect.x = i * 265
        grass.rect.y = 687
        all_sprites.add(grass)

    # Лес

    forest = pygame.sprite.Sprite()
    forest.image = pygame.transform.scale(pygame.image.load("forest.png"), (916, 687))
    forest.rect = sky.image.get_rect()
    forest.rect.x = 0
    forest.rect.y = 0
    all_sprites.add(forest)

    # Герой

    Hero = Main_Hero
    Hero.rect = Hero.image.get_rect()
    Hero.rect.x = 0
    Hero.rect.y = 500
    Hero(all_sprites)

    running = True
    N = 10
    to_left, to_right, to_up = False, False, False

    while running:
        for event in pygame.event.get():
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    to_left = True
                if event.key == pygame.K_RIGHT:
                    to_right = True
                if event.key == pygame.K_UP:
                    to_up = True
            if event.type == pygame.KEYUP:
                if event.key == pygame.K_LEFT:
                    to_left = False
                if event.key == pygame.K_RIGHT:
                    to_right = False
                if event.key == pygame.K_UP:
                    to_up = False
            if event.type == pygame.QUIT:
                pygame.quit()
                exit()
            else:
                if Hero.rect.y != 502:
                    Hero.rect = Hero.rect.move(0, 15)
            all_sprites.update(event, [to_left, to_right, to_up])
            draw(screen)

        screen.fill(pygame.Color('white'))

        all_sprites.draw(screen)
        all_sprites.update()
        pygame.display.flip()

    pygame.quit()
